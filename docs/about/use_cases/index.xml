<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Velocitas â€“ Use Cases</title>
    <link>/velocitas-docs/docs/about/use_cases/</link>
    <description>Recent content in Use Cases on Velocitas</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 09 May 2022 13:43:25 +0530</lastBuildDate>
    
	  <atom:link href="/velocitas-docs/docs/about/use_cases/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: Seat Adjuster</title>
      <link>/velocitas-docs/docs/about/use_cases/seat_adjuster/</link>
      <pubDate>Mon, 09 May 2022 13:43:25 +0530</pubDate>
      
      <guid>/velocitas-docs/docs/about/use_cases/seat_adjuster/</guid>
      <description>
        
        
        &lt;p&gt;In the scenario of a car sharing company, the goal is to provide the functionality of automatically adjusting the driver&amp;rsquo;s seat position based on their preferred settings stored in their profile. When the driver unlocks the car, a request is sent to the vehicle to retrieve the preferred seat position. This is where your implementation begins.&lt;/p&gt;
&lt;p&gt;The &lt;em&gt;Seat Adjuster Vehicle App&lt;/em&gt; receives a MQTT message containing the seat position, which then triggers a seat adjustment command through the &lt;em&gt;Seat Service&lt;/em&gt; to change the seat position. Additionally, to ensure convenience for future trips, the car sharing company saves the driver&amp;rsquo;s preferred seat position and utilizes it accordingly. &lt;em&gt;The Seat Adjuster Vehicle App&lt;/em&gt; subscribes to the seat position, receiving updates from the &lt;em&gt;Databroker&lt;/em&gt;, which streams data from the &lt;em&gt;Seat Service&lt;/em&gt;.&lt;/p&gt;
&lt;h2 id=&#34;requesting-new-seat-position&#34;&gt;Requesting new seat position&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;./seat_adjuster_dataflow_1.png&#34; alt=&#34;seat_adjuster_dataflow_1&#34;&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;The &lt;strong&gt;Customer&lt;/strong&gt; requests the change of the seat position as MQTT message on the topic &lt;code&gt;seatadjuster/setPosition/request&lt;/code&gt; with the payload:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;requestId&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;42&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;position&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;300&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;strong&gt;Seat Adjuster &lt;em&gt;Vehicle App&lt;/em&gt;&lt;/strong&gt; that has subscribed to this topic, receives the request to change the seat position as a MQTT message.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;strong&gt;Seat Adjuster &lt;em&gt;Vehicle App&lt;/em&gt;&lt;/strong&gt; gets the current vehicle speed from the Databroker, which is fed by the &lt;strong&gt;CAN Provider (KUKSA CAN Provider)&lt;/strong&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;With the support of the &lt;strong&gt;&lt;em&gt;Vehicle App&lt;/em&gt; SDK&lt;/strong&gt;, the &lt;strong&gt;Seat Adjuster &lt;em&gt;Vehicle App&lt;/em&gt;&lt;/strong&gt; triggers a seat adjustment command of the &lt;strong&gt;Seat Service&lt;/strong&gt; via gRPC in the event that the speed is equal to zero. Hint: This is a helpful convenience check but not a safety check.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;strong&gt;Seat Service&lt;/strong&gt; moves the seat to the new position via CAN messages.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;strong&gt;Seat Service&lt;/strong&gt; returns OK or an error code as gRPC status to the &lt;strong&gt;Seat Adjuster &lt;em&gt;Vehicle App&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If everything went well, the &lt;strong&gt;Seat Adjuster &lt;em&gt;Vehicle App&lt;/em&gt;&lt;/strong&gt; returns a success message for the topic &lt;code&gt;seatadjuster/setPosition/response&lt;/code&gt; with the payload:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;requestId&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;42&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;status&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Otherwise, an error message will be returned:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;requestId&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;42&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;status&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;message&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;lt;error message&amp;gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;This success or error message will be returned to the &lt;strong&gt;Customer&lt;/strong&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;publishing-current-seat-position&#34;&gt;Publishing current seat position&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;./seat_adjuster_dataflow_2.png&#34; alt=&#34;seat_adjuster_dataflow_2&#34;&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;If the seat position will be changed by the driver, the new seat position will be sent to the &lt;strong&gt;Seat Service&lt;/strong&gt; via CAN.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;strong&gt;Seat Service&lt;/strong&gt; streams the seat position via gRPC to the &lt;strong&gt;KUKSA Databroker&lt;/strong&gt; since it was registered beforehand.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;strong&gt;Seat Adjuster &lt;em&gt;Vehicle App&lt;/em&gt;&lt;/strong&gt; that subscribed to the seat position receives the new seat position from the &lt;strong&gt;KUKSA Databroker&lt;/strong&gt; as a result.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;strong&gt;Seat Adjuster &lt;em&gt;Vehicle App&lt;/em&gt;&lt;/strong&gt; publishes this on topic &lt;code&gt;seatadjuster/currentPosition&lt;/code&gt; with the payload:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;position&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;350&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;strong&gt;Customer&lt;/strong&gt; who has subscribed to this topic retrieves the new seat position and can store this position to use it for the next trip.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;example-code&#34;&gt;Example Code&lt;/h2&gt;
&lt;p&gt;You can find an example implementation of a Seat Adjuster &lt;em&gt;Vehicle App&lt;/em&gt; here:


&lt;a href=&#34;https://github.com/eclipse-velocitas/vehicle-app-python-sdk/tree/main/examples/seat-adjuster&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Seat Adjuster&lt;/a&gt;
&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Dog Mode</title>
      <link>/velocitas-docs/docs/about/use_cases/dog_mode/</link>
      <pubDate>Wed, 24 Aug 2022 13:43:25 +0530</pubDate>
      
      <guid>/velocitas-docs/docs/about/use_cases/dog_mode/</guid>
      <description>
        
        
        &lt;p&gt;The Dog Mode &lt;em&gt;Vehicle App&lt;/em&gt; consists of the following key features:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Request the vehicle&amp;rsquo;s Heating, Ventilation, and Air Conditioning (HVAC) service to turn the Air Conditioning (AC) ON/OFF&lt;/li&gt;
&lt;li&gt;The driver can adjust the temperature for a specific degree&lt;/li&gt;
&lt;li&gt;The &lt;em&gt;Vehicle App&lt;/em&gt; observe the current temperature and the battery&amp;rsquo;s state of charge and react accordingly&lt;/li&gt;
&lt;li&gt;The driver/owner will be notified whenever the state of the charge drops below a certain value&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;example-code&#34;&gt;Example Code&lt;/h2&gt;
&lt;p&gt;You can find an example implementation of a dog mode &lt;em&gt;Vehicle App&lt;/em&gt; here:


&lt;a href=&#34;https://github.com/eclipse-velocitas/vehicle-app-python-sdk/tree/main/examples/dog-mode&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Dog Mode&lt;/a&gt;
&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
