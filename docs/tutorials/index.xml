<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Velocitas â€“ Tutorials</title>
    <link>/velocitas-docs/docs/tutorials/</link>
    <description>Recent content in Tutorials on Velocitas</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 09 May 2022 13:43:25 +0530</lastBuildDate>
    
	  <atom:link href="/velocitas-docs/docs/tutorials/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: Getting Started</title>
      <link>/velocitas-docs/docs/tutorials/quickstart/</link>
      <pubDate>Mon, 09 May 2022 13:43:25 +0530</pubDate>
      
      <guid>/velocitas-docs/docs/tutorials/quickstart/</guid>
      <description>
        
        
        
      </description>
    </item>
    
    <item>
      <title>Docs: Prototyping</title>
      <link>/velocitas-docs/docs/tutorials/prototyping/</link>
      <pubDate>Wed, 02 Nov 2022 10:09:25 +0530</pubDate>
      
      <guid>/velocitas-docs/docs/tutorials/prototyping/</guid>
      <description>
        
        
        
      </description>
    </item>
    
    <item>
      <title>Docs: Vehicle App Development</title>
      <link>/velocitas-docs/docs/tutorials/vehicle_app_development/</link>
      <pubDate>Mon, 09 May 2022 13:43:25 +0530</pubDate>
      
      <guid>/velocitas-docs/docs/tutorials/vehicle_app_development/</guid>
      <description>
        
        
        &lt;p&gt;Please visit first 

&lt;a href=&#34;/velocitas-docs/velocitas-docs//docs/tutorials/quickstart/&#34;&gt;Getting Started page&lt;/a&gt;
 if you don&amp;rsquo;t know where to start.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Vehicle Model Creation</title>
      <link>/velocitas-docs/docs/tutorials/vehicle_model_creation/</link>
      <pubDate>Wed, 08 Mar 2023 15:00:00 +0100</pubDate>
      
      <guid>/velocitas-docs/docs/tutorials/vehicle_model_creation/</guid>
      <description>
        
        
        

&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Info&lt;/h4&gt;

    &lt;p&gt;On Friday, 2023-03-03 we released our new 
&lt;p&gt;&lt;a href=&#34;automated_model_lifecycle/&#34;&gt;model lifecycle approach&lt;/a&gt;
. With the update of the documentation the previous content of this page can be found in the section&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;manual_model_creation/&#34;&gt;Manual Vehicle Model Creation&lt;/a&gt;
now.&lt;/p&gt;&lt;/p&gt;


&lt;/div&gt;

&lt;p&gt;A &lt;em&gt;Vehicle Model&lt;/em&gt; makes it possible to easily get vehicle data from the KUKSA Databroker and to execute remote procedure calls over gRPC against &lt;em&gt;Vehicle Services&lt;/em&gt; and other &lt;em&gt;Vehicle Apps&lt;/em&gt;. It is generated from the underlying semantic models based e.g. on the 

&lt;a href=&#34;https://covesa.github.io/vehicle_signal_specification/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;COVESA Vehicle Signal Specification (VSS)&lt;/a&gt;
. The model is generated for a concrete programming language as a graph-based, strongly-typed, intellisense-enabled library providing vehicle abstraction &amp;ldquo;on code level&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;By default our app templates now generate the vehicle model during the devContainer initialization - managed by the Velocitas life cycle management. The respective VSS-based model source is referenced in the app manifest allowing to freely choose the model being used in your project. You will find more details about this in section 

&lt;a href=&#34;automated_model_lifecycle/&#34;&gt;Automated Model Lifecycle&lt;/a&gt;
.&lt;/p&gt;
&lt;p&gt;The previous approach, using pre-generated model repositories, is deprecated as of now. But is still available and is described in section 

&lt;a href=&#34;manual_model_creation/&#34;&gt;Manual Vehicle Model Creation&lt;/a&gt;
. Please be aware, that you would either have to use template versions before the above mentioned release, or you need to adapt the newer versions of the template using the old approach.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Vehicle App Runtime</title>
      <link>/velocitas-docs/docs/tutorials/vehicle_app_runtime/</link>
      <pubDate>Mon, 09 May 2022 13:43:25 +0530</pubDate>
      
      <guid>/velocitas-docs/docs/tutorials/vehicle_app_runtime/</guid>
      <description>
        
        
        
      </description>
    </item>
    
    <item>
      <title>Docs: gRPC service generation</title>
      <link>/velocitas-docs/docs/tutorials/grpc_service_generation/</link>
      <pubDate>Fri, 07 Jun 2024 14:02:00 +0530</pubDate>
      
      <guid>/velocitas-docs/docs/tutorials/grpc_service_generation/</guid>
      <description>
        
        
        &lt;p&gt;This tutorial shows how to generate a basic gRPC service like a seat service. For this example the proto file under 

&lt;a href=&#34;https://raw.githubusercontent.com/eclipse-kuksa/kuksa-incubation/0.4.0/seat_service/proto/sdv/edge/comfort/seats/v1/seats.proto&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://raw.githubusercontent.com/eclipse-kuksa/kuksa-incubation/0.4.0/seat_service/proto/sdv/edge/comfort/seats/v1/seats.proto&lt;/a&gt;
 is taken.&lt;/p&gt;
&lt;p&gt;All files included from &lt;code&gt;services/seats&lt;/code&gt; are auto-generated and added to the app project as Conan dependency.
For writing a complete gRPC service you need two velocitas apps/projects.
One is implementing a client and the other one is for providing the server.
To complete the server implementation you have to fill the generated &lt;code&gt;*ServiceImpl.cpp&lt;/code&gt;.
Have a look at the linked content beneath for a tutorial how it would be done for a SeatService leveraging 

&lt;a href=&#34;https://raw.githubusercontent.com/eclipse-kuksa/kuksa-incubation/0.4.0/seat_service/proto/sdv/edge/comfort/seats/v1/seats.proto&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://raw.githubusercontent.com/eclipse-kuksa/kuksa-incubation/0.4.0/seat_service/proto/sdv/edge/comfort/seats/v1/seats.proto&lt;/a&gt;
.&lt;/p&gt;
&lt;p&gt;To run the example you need to start the velocitas app for the server first and then the second velocitas app for the client.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Vehicle App Deployment</title>
      <link>/velocitas-docs/docs/tutorials/vehicle_app_deployment/</link>
      <pubDate>Thu, 22 Jun 2023 09:43:25 +0530</pubDate>
      
      <guid>/velocitas-docs/docs/tutorials/vehicle_app_deployment/</guid>
      <description>
        
        
        &lt;p&gt;See the 

&lt;a href=&#34;https://eclipse.dev/kanto/docs/references/containers/container-config/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Kanto container configuration&lt;/a&gt;
 for details how to write Kanto deployment files.&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
